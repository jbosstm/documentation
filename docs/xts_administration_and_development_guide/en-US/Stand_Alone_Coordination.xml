<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Transactions_XTS_Administration_And_Development_Guide.ent">
%BOOK_ENTITIES;
]>
<chapter>

  <title>Stand-Alone Coordination</title>

  <indexterm><primary>stand-alone coordination</primary></indexterm>
  <indexterm><primary>activation coordinator</primary></indexterm>
  <indexterm><primary>command-line options</primary></indexterm>

  <section>
    <title>Introduction</title>
    <para>
      By default, coordination contexts are obtained from the local coordinator.
      Therefore, WS-AT transactions or WS-BA activities created by a locally-deployed client application
      are supplied with a context which identifies the Registration Service running on the client's machine. Any Web
      Services invoked by the client are coordinated by the Transaction Protocol services running on the client's
      host. This is the case whether the Web Services are running locally or remotely. Such a configuration is called
      <firstterm>local coordination</firstterm>.
    </para>
    <para>
      You can reconfigure this setting globally for all clients, causing context creation requests to be redirected to
      an Activation Coordinator Service running on a remote host. Normally, the rest of the coordination process is
      executed from the remote host. This configuration is called <firstterm>stand-alone coordination</firstterm>.
    </para>
    <itemizedlist>
      <title>Reasons for Choosing a Stand-Alone Coordinator</title>
      <listitem>
        <para>
          Efficiency: if a client application invokes Web Services on a remote &APPSERVER;, coordinating the transaction
          from the remote server might be more efficient, since the protocol-specific messages between the coordinator
          and the participants do not need to travel over the network.
        </para>
      </listitem>
      <listitem>
        <para>
          Reliability: if the coordinator service runs on a dedicated host, there is no danger of failing applications
          or services affecting the coordinator and causing failures for unrelated transactions.
        </para>
      </listitem>
      <listitem>
        <para>
          A third reason might be to use a coordination service provided by a third party vendor.
        </para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Configuring the Activation Coordinator</title>
      <para>
        The simplest way to configure a stand-alone coordinator is to provide a complete URL for the remote
        coordinator. This can be done by changing the 'url' property of the 'xts-environment' element of the
        XTS Subsystem configuration in the <filename>standalone-xts.xml</filename>. <xref linkend="example-xts-subsystem.xml" />
        shows the snippet of XML that you should change.
      </para>
      <example id="example-xts-subsystem.xml">
        <title>Example <filename>standalone-xts.xml</filename> configuration settings</title>
        <programlisting language="XML" role="XML"><xi:include href="extras/example-xts-subsystem.xml"
        xmlns:xi="http://www.w3.org/2001/XInclude" parse="text"
        /></programlisting>
      </example>

    <para>
      The XTS module (<filename>modules/system/layers/base/org/jboss/xts/main/jbossxts-${XTS_VERSION}.jar</filename>)
      in the &APPSERVER; includes a configuration file,
      <filename>xts-properties.xml</filename>, in the root of the jar. These properties can be edited and then
      re-packaged in the jar. The changes will take affect on next boot of the  &APPSERVER;.
      <xref linkend="example-xts-properties.xml" />
      shows a fragment of this file which details the options for changing the coordinator URL.
    </para>
    <example id="example-xts-properties.xml">
      <title>Example <filename>xts-properties.xml</filename> configuration settings</title>
      <programlisting language="XML" role="XML"><xi:include href="extras/example-xts-properties.xml"
      xmlns:xi="http://www.w3.org/2001/XInclude" parse="text"
      /></programlisting>
    </example>

    <para>
      You can also specify the individual elements of the URL using the properties
      <varname>coordinator.scheme</varname>, <varname>coordinator.address</varname>, and so forth. These values only
      apply when the <varname>coordinator.url</varname> is not set. The URL is constructed by combining the specified
      values with default values for any missing elements. This is particularly useful for two specific use cases.
    </para>
    <orderedlist>
      <listitem>
        <para>
          The first case is where the client is expected to use an XTS coordinator deployed in another &APPSERVER;. If,
          for example, this &APPSERVER; is bound to address <literal>10.0.1.99</literal>, setting property
          <varname>coordinator.address</varname> to <literal>10.0.1.99</literal> is normally all that is required to
          configure the coordinator URL to identity the remote &APPSERVER;'s coordination service. If the Web service on
          the remote &APPSERVER; were reset to <literal>9090</literal> then it would also be necessary to set property
          <varname>coordinator.port</varname> to this value.
        </para>
      </listitem>
      <listitem>
        <para>
          The second common use case is where communications between client and coordinator, and between participant and
          coordinator, must use secure connections. If property <varname>coordinator.scheme</varname> is set to value
          <literal>https</literal>, the client's request to begin a transaction is sent to the coordinator service over
          a secure https connection. The XTS coordinator and participant services will ensure that all subsequent
          communications between coordinator and client or coordinator and web services also employ secure https
          connections. Note that this requires configuring the trust stores in the &APPSERVER; running the client,
          coordinator and participant web services with appropriate trust certificates.
        </para>
      </listitem>
    </orderedlist>

    <note>
      <para>
        The property names have been abbreviated in order to fit into the table. They should each start with prefix
        <literal>org.jboss.jbossts.xts11.coordinator</literal>.
      </para>
    </note>


    <table id="list-option-priority">
      <title>Command-Line Options Passed with the <parameter>-D</parameter> Parameter, Ordered by Priority</title>
      <tgroup cols="3">
        <thead>
          <row>
            <entry><para>Category</para></entry>
            <entry><para>Property</para></entry>
            <entry><para>Format</para></entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><para>Absolute URL</para></entry>
            <entry><para><varname>...coordinatorURL</varname></para></entry>
            <entry><para><ulink url="http://coord.host:coord.port/ws-c11/ActivationService" /></para></entry>
          </row>
          <row>
            <entry><para>Coordinator Scheme, Host, Port, and Path</para></entry>
            <entry>
              <para><varname>...coordinator.scheme</varname></para>
              <para><varname>...coordinator.address</varname></para>
              <para><varname>...coordinator.port</varname></para>
              <para><varname>...coordinator.path</varname></para>
            </entry>
            <entry>
              <para><literal>http</literal></para>
              <para><replaceable>server.bind.address</replaceable></para>
              <para><replaceable>jboss.web.bind.port</replaceable></para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>
</chapter>

