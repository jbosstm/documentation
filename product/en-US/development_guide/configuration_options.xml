<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../product_documentation.ent">
%BOOK_ENTITIES;
]>
<section>
    <title>Configuration options</title>

    <section>
        <title>Loading a configuration</title>
        <para>
            Each module of the system contains a
            <classname>
                <replaceable>module</replaceable>
                propertyManager
            </classname>
            class, which provides static getter methods for one or more
            <classname>
                <replaceable>name</replaceable>
                EnvironmentBean
            </classname>
            classes. An example is
            <classname>com.arjuna.ats.arjuna.commmon.arjPropertyManager</classname>.
            These environment beans are standard
            JavaBean containing properties for each configuration option in the
            system. Typical usage is of the form:
        </para>
        <programlisting language="Java" role="JAVA"><xi:include href="extras/defaultTimeout.java"
            xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" /></programlisting>
        <para>
            These beans are singletons, instantiated upon first access, using the following algorithm.
        </para>
        <procedure>
            <title>Algorithm for environment bean instantiation</title>
            <step>
                <para>
                    The properties are loaded and populated from a properties file named and located as follows:
                </para>
                <substeps>
                    <step>
                        <para>
                            If the properties file name property
                            <methodname>com.arjuna.ats.arjuna.common.propertiesFile</methodname>
                            is set, its value is used as the file name.
                        </para>
                    </step>
                    <step>
                        <para>
                            If not, the default file name <code>jbossts-properties.xml</code> is used.
                            The definition of the used value can be found at Narayana distribution jar file under
                            <code>META-INF/MANIFEST.MF</code> at property <code>arjuna-properties-file</code>.
                        </para>
                    </step>
                </substeps>
            </step>
            <step>
                <para>
                    The file thus named is searched for by, in order
                </para>
                <orderedlist>
                    <listitem>
                        <para>
                            absolute path
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code>user.dir</code>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code>user.home</code>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code>java.home</code>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            directories contained on the classpath
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            a default file embedded in the product .jar file
                        </para>
                        <para>
                            if you use Narayana dependency org.jboss.narayana.jts:narayana-jts-idlj
                            you can check the default properties settings
                            <ulink url="https://github.com/jbosstm/narayana/blob/master/ArjunaJTS/narayana-jts-idlj/src/main/resources/jbossts-properties.xml">
                            in the Narayana repository at github</ulink>.
                        </para>
                    </listitem>
                </orderedlist>
            </step>
            <step>
                <para>
                    The file is treated as being of standard
                    <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html"><code>java.util.Properties</code> xml format</ulink>
                    and loaded accordingly.
                    The <code>entry</code> names are of the form <code>EnvironmentBeanClass.propertyName</code>.
                </para>
                <para>
                   An example is
                    <code>&lt;entrykey="CoordinatorEnvironmentBean.commitOnePhase"&gt;YES&lt;/entry&gt;</code>
                </para>
                <para>
                    In specific cases when you want to set properties on configuration beans other that the
                    default bean instances the form is <code>EnvironmentBeanClass.&lt;storeType&gt;.propertyName</code>.
                </para>
                <para>
                  An example is
                    <code>&lt;entry key="ObjectStoreEnvironmentBean.communicationStore.objectStoreType"&gt;</code>
                    <code>com.arjuna.ats.internal.arjuna.objectstore.VolatileStore&lt;/entry&gt;</code>
                </para>
                <note>
                    <para>
                       Valid values for Boolean properties are case-insensitive, and may be one of
                       <code>NO</code>/<code>YES</code>, <code>FALSE</code>/<code>TRUE</code>,
                       <code>OFF</code>/<code>ON</code>.
                    </para>
                </note>
                <para>
                    In the case of properties that take multiple values, they are white-space-delimited.
                </para>
                <example>
                    <title>Example recovery modules of Recovery Environment Bean</title>
                    <programlisting language="XML" role="XML"><xi:include href="extras/EnvironmentBeans.xml"
                        xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" /></programlisting>
                </example>
            </step>
            <step>
                <para>
                    After the file is loaded, it is cached and is not re-read until the JVM is restarted. Changes to
                    the
                    properties file require a restart in order to take effect.
                </para>
            </step>
            <step>
                <para>
                    After the properties are loaded, the EnvironmentBean is then inspected and, for each field, if the
                    properties
                    contains a matching key in the search order as follows, the
                    <methodname>setter</methodname>
                    method for that field is invoked with the
                    value from the properties, or the system properties if
                    different.
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            Fully.Qualified.NameEnvironmentBean.propertyName
                        </para>
                        <para>
                          for example <code>com.arjuna.ats.arjuna.common.CoordinatorEnvironmentBean.commitOnePhase</code>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            NameEnvironmentBean.propertyName (<replaceable>this is the preferred form used in the properties file</replaceable>)
                        </para>
                        <para>
                          for example <code>CoordinatorEnvironmentBean.commitOnePhase</code>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            the old com.arjuna... properties key defined at bean by annnotations <code>@PropertyPrefix</code>
                            or <code>@FullPropertyName</code>
                            (<replaceable>deprecated, for backwards compatibility only</replaceable>).
                        </para>
                        <para>
                          for example <code>com.arjuna.ats.arjuna.coordinator.commitOnePhase</code>
                        </para>
                    </listitem>
                </itemizedlist>
            </step>
            <step>
                <para>
                    The bean is then returned to the caller, which may further override values by calling setter
                    methods.
                </para>
            </step>
        </procedure>
        <para>
            The implementation reads most bean properties only once, as the consuming component or class is
            instantiated. This
            usually happens the first time a transaction is run. As a result, calling
            <methodname>setter</methodname>
            methods
            to change the value of bean properties while the system is running typically has no effect, unless it
            is done
            prior to any use of the transaction system. Altered bean properties are not persisted back to the
            properties file.
        </para>
        <para>
            You can configure the system using a bean wiring system such as JBoss Microcontainer or Spring. Take care
            when
            instantiating beans, to obtain the singleton via the static getter (factory) method on the module
            property
            manager. Using a new bean instantiated with the default constructor is ineffective, since it is not
            possible
            to
            pass this configured bean back to the property management system.
        </para>
    </section>


    <section>
        <title>ArjunaCore Options</title>
        <para>
            The canonical reference for configuration options is the Javadoc of the various
            <classname>EnvironmentBean</classname>
            classes. For ArjunaCore these are:
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    <classname>com.arjuna.common.internal.util.logging.LoggingEnvironmentBean</classname>
                </para>
            </listitem>
            <listitem>
                <para>
                    <classname>com.arjuna.common.internal.util.logging.basic.BasicLogEnvironmentBean</classname>
                </para>
            </listitem>
            <listitem>
                <para>
                    <classname>com.arjuna.ats.txoj.common.TxojEnvironmentBean</classname>
                </para>
            </listitem>
            <listitem>
                <para>
                    <classname>com.arjuna.ats.arjuna.common.CoordinatorEnvironmentBean</classname>
                </para>
            </listitem>
            <listitem>
                <para>
                    <classname>com.arjuna.ats.arjuna.common.ObjectStoreEnvironmentBean</classname>
                </para>
            </listitem>
            <listitem>
                <para>
                    <classname>com.arjuna.ats.arjuna.common.RecoveryEnvironmentBean</classname>
                </para>
            </listitem>
            <listitem>
                <para>
                    <classname>com.arjuna.ats.arjuna.common.CoreEnvironmentBean</classname>
                </para>
            </listitem>
            <listitem>
                <para>
                    <classname>com.arjuna.ats.internal.arjuna.objectstore.hornetq.HornetqJournalEnvironmentBean</classname>
                </para>
            </listitem>
        </itemizedlist>
    </section>
    <section>
        <title>&PRODUCT;
            JTA Configuration options
        </title>
        <para>
            The canonical reference for configuration options is the javadoc of the various EnvironmentBean classes. For
      &PRODUCT;
            JTA, these classes are the ones provided by ArjunaCore, as well as:
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    <classname>com.arjuna.ats.jdbc.common.JDBCEnvironmentBean</classname>
                </para>
            </listitem>
            <listitem>
                <para>
                    <classname>com.arjuna.ats.jta.common.JTAEnvironmentBean</classname>
                </para>
            </listitem>
        </itemizedlist>
    </section>
    <section>
        <title>&PRODUCT;
            JTS Options
        </title>
        <para>
            The canonical reference for configuration options is the javadoc of the various
            <classname>EnvironmentBean</classname>
            classes. For &PRODUCT; JTS these are the ones
            provided by ArjunaCore, as well as:
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    <classname>com.arjuna.orbportability.common.OrbPortabilityEnvironmentBean</classname>
                </para>
            </listitem>
            <listitem>
                <para>
                    <classname>com.arjuna.ats.jts.common.JTSEnvironmentBean</classname>
                </para>
            </listitem>
        </itemizedlist>
    </section>
    <section>
        <title>&PRODUCT;
            WS-AT/WS-BA Options
        </title>
        <para>
            For &PRODUCT;
            WebService transaction protocols these are the ones
            provided by ArjunaCore, as well as:
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    <classname>org.jboss.jbossts.xts.environment.WSCEnvironmentBean</classname>
                </para>
            </listitem>
            <listitem>
                <para>
                    <classname>org.jboss.jbossts.xts.environment.WSCFEnvironmentBean</classname>
                </para>
            </listitem>
            <listitem>
                <para>
                    <classname>org.jboss.jbossts.xts.environment.WSTEnvironmentBean</classname>
                </para>
            </listitem>
            <listitem>
                <para>
                    <classname>org.jboss.jbossts.xts.environment.XTSEnvironmentBean</classname>
                </para>
            </listitem>
            <listitem>
              <para>
                <classname>org.jboss.jbossts.xts.environment.RecoveryEnvironmentBean</classname>
              </para>
            </listitem>
        </itemizedlist>
    </section>
</section>
